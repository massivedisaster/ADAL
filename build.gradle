/*
 * ADAL - A set of Android libraries to help speed up Android development.
 *
 * Copyright (c) 2017 ADAL
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

apply from: "$project.rootDir/deploy/updateReadme.gradle"

// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext {
    userOrgBase = 'massivedisaster'
    websiteBase = 'https://github.com/massivedisaster/ADAL'
    licensesBase = ['MIT']
    packageBase = 'com.massivedisaster'
    adalModuleBase = packageBase + '.adal'
    isLibrary = true
    libraryVersionCode = 1
    libraryVersionName = project.libraryVersionName
    librarySnaphotEnabled = false

    libraryVersionString = {
        return libraryVersionName + (librarySnaphotEnabled ? '-SNAPSHOT' : '')
    }
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0-beta5'
        classpath 'com.novoda:bintray-release:0.5.0'
        classpath 'pt.simdea.verifier:verifier:3.5.8'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task version {
    println "Current version: " + libraryVersionString()
}

task updateReadme() {
    doLast {
        processUpdateReadme file("$project.rootDir"), ".md", libraryVersionName
    }
}